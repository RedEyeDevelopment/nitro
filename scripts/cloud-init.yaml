#cloud-config
packages:
  - redis
write_files:
  # create the main bootstrap script
  - path: /etc/nitro/bootstrap.sh
    content: |
      #!/usr/bin/env bash
      phpversion="$1"
      database="$2"

      # run the correct script depending on the version of PHP
      if [ "$phpversion" == '7.3' ]; then
        sudo bash /etc/nitro/php/php-73.sh
      elif [ "$phpversion" == '7.2' ]; then
        sudo bash /etc/nitro/php/php-72.sh
      else
        sudo bash /etc/nitro/php/php-74.sh
      fi

      # run the correct script depending on the database
      if [ "$database" == 'postgres' ]; then
        # install postgres
        sudo bash /etc/nitro/postgres/install.sh

        # run the postgres setup
        sudo bash /etc/nitro/postgres/setup.sh
      else
        # install mariadb
        sudo bash /etc/nitro/mariadb/install.sh

        # run the mariadb setup
        sudo bash /etc/nitro/mariadb/setup.sh
      fi

      # install nginx
      sudo bash /etc/nitro/nginx/install.sh

      # remove the default site
      sudo rm /etc/nginx/sites-enabled/default

      # add the info site
      sudo bash /etc/nitro/nginx/add-site.sh info $phpversion
    permissions: '770'
  # create the php install scripts
  - path: /etc/nitro/php/php-74.sh
    content: |
      #!/bin/bash
      apt install -y php7.4 php7.4-mbstring php7.4-cli php7.4-curl php7.4-fpm php7.4-gd php7.4-intl php7.4-json \
      php7.4-mysql php7.4-opcache php7.4-pgsql php7.4-zip php7.4-xml
  - path: /etc/nitro/php/info.php
    content: |
      <?php phpinfo();
    permissions: '770'
  # create the composer install script
  - path: /etc/nitro/composer-install.sh
    content: |
      # install composer
      php -r "readfile('http://getcomposer.org/installer');" | sudo php -- --install-dir=/usr/bin/ --filename=composer
    permissions: '770'
  # create mariadb scripts
  - path: /etc/nitro/mariadb/setup.sh
    content: |
      # remove bind from mariadb to allow remote connection
      systemctl stop mariadb
      sed -i 's|bind-address|#bind-address|g' /etc/mysql/mariadb.conf.d/50-server.cnf
      systemctl start mariadb

      # create the database and user
      export USER_PASS=$(openssl rand -base64 16)
      echo "$USER_PASS" > /etc/nitro/.mysql_password
      export MYSQL_USER=$(cat /etc/nitro/.mysql_password)

      sudo sed -i 's|CHANGEME|'$MYSQL_USER'|g' /etc/nitro/mariadb/init.sql

      sudo mysql -u root < /etc/nitro/mariadb/init.sql
    permissions: '770'
  - path: /etc/nitro/mariadb/install.sh
    content: |
      #!/bin/bash
      apt install -y mariadb-server
  - path: /etc/nitro/mariadb/init.sql
    content: |
      CREATE DATABASE IF NOT EXISTS craftcms;
      CREATE USER IF NOT EXISTS 'craftcms'@'%' IDENTIFIED BY 'CHANGEME';
      GRANT CREATE, ALTER, INDEX, LOCK TABLES, REFERENCES, UPDATE, DELETE, DROP, SELECT, INSERT ON `craftcms`.* TO 'craftcms'@'%';
      FLUSH PRIVILEGES;
    permissions: '770'
  # create nginx install scripts
  - path: /etc/nitro/nginx/install.sh
    content: |
      #!/bin/bash
      apt install -y nginx
  - path: /etc/nitro/nginx/template.conf
    content: |
      server {
          listen 80;

          root /var/www/CHANGEPATH;

          index index.html index.htm index.php;

          server_name CHANGESERVERNAME;

          location / {
              try_files $uri $uri/ /index.php$is_args$args;
          }

          location ~ \.php$ {
             include snippets/fastcgi-php.conf;
             fastcgi_pass unix:/var/run/php/phpCHANGEPHPVERSION-fpm.sock;
          }
      }
    permissions: '770'
  - path: /etc/nitro/nginx/add-site.sh
    content: |
      #!/usr/bin/env bash
      sitename="$1"
      phpversion="$2"

      # move info.php into the nginx directory /var/www/html/index.php
      sudo mkdir -p /var/www/$sitename
      sudo cp /etc/nitro/php/info.php /var/www/$sitename/index.php

      # set permissions for www-data to new directory
      sudo chown -R www-data:www-data /var/www/$sitename

      # copy the nitro nginx template into sites-available/default
      sudo cp /etc/nitro/nginx/template.conf /etc/nginx/sites-available/$sitename

      # change the variables
      sudo sed -i 's|CHANGEPATH|'$sitename'|g' /etc/nginx/sites-available/$sitename
      sudo sed -i 's|CHANGESERVERNAME|'$sitename'|g' /etc/nginx/sites-available/$sitename
      sudo sed -i 's|CHANGEPHPVERSION|'$phpversion'|g' /etc/nginx/sites-available/$sitename

      # enable the nginx site
      sudo ln -s /etc/nginx/sites-available/$sitename /etc/nginx/sites-enabled/

      # reload nginx
      sudo service nginx reload
    permissions: '0770'
runcmd:
  - sudo add-apt-repository -y ppa:nginx/stable
  - sudo add-apt-repository -y ppa:ondrej/php
  - sudo apt update -y
  - sudo apt upgrade -y
